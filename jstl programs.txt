*************jstl core

<html>
    <head>
        <title>TODO supply a title</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
    </head>
    <body>
    <form action="first.jsp">
        <input type="submit"/>
    </form>
        
    </body>
</html>

1.html

<h1>this is imported</h1>

<%@page contentType="text/html" pageEncoding="UTF-8"%>
<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>JSP Page</title>
    </head>
    <body>
        <h1>jstl core tags!</h1>
        <c:out value="${'hello'}" /><br/>
        <c:import url="1.html" var="u"/>
        <c:out value="${u}"/><br/>
        <c:set var="name" value="kishan" scope="session"/>
        <c:catch var="c">
            <% int x=1/0;%>
        </c:catch>
        <c:if test="${c != null}">
            <c:out value="${c}"/><br/>
        </c:if>
        <c:choose >
            <c:when test="${sessionScope.name==kishan}" >
                <c:out value="hello kishan"/><br/>
            </c:when>
            <c:otherwise >
                <c:out value="${'bye bye'}" /><br/>
            </c:otherwise>
        </c:choose>
            <c:forEach var="h" items="${header}">
                ${h.key}, ${' '},${h.value}<br/> 
            </c:forEach>
            <c:forTokens items="my name is kishan" delims=" " var="d" >
                <c:out value="${d}"/><br/>
            </c:forTokens> 
            <c:url var="u" value="http://www.google.com">
                <c:param name="name" value="kishan" />
            </c:url>      
            <c:out value="${u}"/><br/>    
    </body>
</html>


******************jstl function tags

index.html

<html>
    <head>
        <title>TODO supply a title</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
    </head>
    <body>
        <div>jstl function tags</div>
        <form action="first.jsp">
            <input type="submit">
        </form>
    </body>
</html>

first.jsp

<%-- 
    Document   : first
    Created on : Apr 10, 2017, 12:30:53 AM
    Author     : kishan nandha
--%>

<%@page contentType="text/html" pageEncoding="UTF-8"%>
<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@taglib  prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>JSP Page</title>
    </head>
    <body>
        <h1>jstl function tags</h1>
        <c:set var="string" value="my name is   <xyz> kishan"/>
        <c:out value="${string}"/><br/>
        ${fn:contains(string,'KISHAN')}<br/>
        ${fn:containsIgnoreCase(string,'KISHAN')}<br/>
        before escapexml function <br/>
        ${string}<br/>
        after escapexml function <br/>
        ${fn:escapeXml(string)}<br/>
        ${fn:endsWith(string,'kishan')}<br/>
        Length of string before trim:<br/>
        ${fn:length(string)}<br/>
        Length of string after trim:<br/>
        <c:set var="string1" value="${fn:trim(string)}"/>
        ${fn:length(string1)}<br/>
        ${fn:startsWith(string,",my")}<br/>
        <c:set var="string2" value="${fn:split(string,' ')}" />
        <c:set var="string3" value="${fn:join(string2,'-')}"/>
        ${string3}<br/>
        <c:set var="string4" value="${fn:substring(string,5,13)}"/>
        ${string4}<br/>
        ${fn:substringAfter(string,'my')}<br/>
        ${fn:substringBefore(string,'kishan')}<br/>
        ${fn:replace(string,'kishan','ms dhoni')}        
        
    </body>
</html>


********************jstl SQL tags

index.html

<html>
    <head>
        <title>TODO supply a title</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
    </head>
    <body>
        <div>jstl sql tags</div>
        <form action="first.jsp">
            <input type="submit">
        </form>
    </body>
</html>

first.jsp

<%@page contentType="text/html" pageEncoding="UTF-8"%>
<%@taglib uri="http://java.sun.com/jsp/jstl/core"  prefix="c"%>
<%@taglib uri="http://java.sun.com/jsp/jstl/sql" prefix="sql"%>
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>JSP Page</title>
    </head>
    <body>
        <h1>jstl sql tags</h1>
        <sql:setDataSource var="db" driver="com.mysql.jdbc.Driver" url="jdbc:mysql://localhost/mydb"
                           user="root" password="root"/>
        <sql:update var="q1" dataSource="${db}">
            INSERT INTO sub_heads VALUES(45,6,'kishan');
        </sql:update>
        <sql:transaction dataSource="${db}" >
            <sql:update var="q">
                INSERT INTO sub_heads VALUES(46,6,'ki');
            </sql:update>
            <sql:update var="q">
                INSERT INTO sub_heads VALUES(47,6,'kis');
            </sql:update>
             <sql:update var="q">
                INSERT INTO sub_heads VALUES(48,6,'kisha');
            </sql:update>    
        </sql:transaction>   
        <sql:query var="rs" dataSource="${db}" >
            SELECT * FROM sub_heads;
        </sql:query>
            <table border="2px" >
                <tr>
                    <th>ID</th>
                    <th>MHID</th>
                    <th>ACTIVITY</th>
                </tr>
                <c:forEach var="table" items="${rs.rows}">
                    <tr>
                        <td><c:out value="${table.Id}"/></td>
                        <td><c:out value="${table.Mhid}"/></td>
                        <td><c:out value="${table.Activity}"/></td>
                    </tr>
                </c:forEach>
            </table>
        <c:set var="aid" value="45"/>   
        <sql:update var="q2" dataSource="${db}">
            DELETE FROM sub_heads WHERE Id=?;
            <sql:param value="${aid}"/>
        </sql:update>
    </body>
</html>

*************************JSTL Formatting tags

The formatting tags provide support for message formatting, number and date formatting etc. The url for the formatting tags is http://java.sun.com/jsp/jstl/fmt and prefix is fmt.

The JSTL formatting tags are used for internationalized web sites to display and format text, the time, the date and numbers. The syntax used for including JSTL formatting library in your JSP is:

    <%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"  %>  

Formatting Tags 	Descriptions
fmt:parseNumber 	It is used to Parses the string representation of a currency, percentage or number.
fmt:timeZone 	It specifies a parsing action nested in its body or the time zone for any time formatting.
fmt:formatNumber 	It is used to format the numerical value with specific format or precision.
fmt:parseDate 	It parses the string representation of a time and date.
fmt:bundle 	It is used for creating the ResourceBundle objects which will be used by their tag body.
fmt:setTimeZone 	It stores the time zone inside a time zone configuration variable.
fmt:setBundle 	It loads the resource bundle and stores it in a bundle configuration variable or the named scoped variable.
fmt:message 	It display an internationalized message.
fmt:formatDate 	It formats the time and/or date using the supplied pattern and styles.

JSTL Formatting <fmt:parseNumber> Tag

The <fmt:parseNumber> tag is used to Parses the string representation of a currency, percentage, or number. It is based on the customized formatting pattern.

The syntax used for including the <fmt:parseNumber> tag is:

    <fmt:parseNumber attributes> body content </fmt:parseNumber>  

Let's see the simple example to understand the formatting <fmt:parseNumber> tag:

    <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>  
    <%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>  
      
    <html>  
      <head>  
     <title>fmt:parseNumber tag</title>  
      </head>  
      <body>  
    <h3>The fmt:parseNumber tag Example is:</h3>  
      
    <c:set var="Amount" value="786.970" />  
      
        <fmt:parseNumber var="j" type="number" value="${Amount}" />  
        <p><i>Amount is:</i>  <c:out value="${j}" /></p>  
      
        <fmt:parseNumber var="j" integerOnly="true" type="number" value="${Amount}" />  
        <p><i>Amount is:</i>  <c:out value="${j}" /></p>  
      </body>  
    </html>  

Output:

    The fmt:parseNumber tag Example is:  
    Amount is: 786.97  
    Amount is: 786  

JSTL Formatting <fmt:timeZone> Tag

The <fmt:timeZone> tag specifies the parsing action nested in its body or the time zone for any time formatting. It is used for specify the time zone information used for time formatting operations.

The syntax used for including the <fmt:timeZone> tag is:

    <fmt:timeZone attributes> body content </fmt:timeZone>  

Let's see the simple example to understand the formatting <fmt:timeZone> tag:

    <%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>  
    <%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>  
    <html>  
      <head>  
        <title>fmt:timeZone Tag</title>  
      </head>  
      
      <body>  
        <c:set var="str" value="<%=new java.util.Date()%>" />  
        <table border="2" width="100%">  
          <tr>  
            <td width="100%" colspan="2" bgcolor="#FF7F50">  
              <p align="center">  
                <b>  
                  <font color="#000000" size="6">Formatting:  
                  <fmt:formatDate value="${str}" type="both"  
                  timeStyle="long" dateStyle="long" />  
                  </font>  
                </b>  
              </p>  
            </td>  
          </tr>  
      
          <c:forEach var="zone"  
          items="<%=java.util.TimeZone.getAvailableIDs()%>">  
            <tr>  
              <td width="50%"  bgcolor="#C0C0C0">  
                <c:out value="${zone}" />  
              </td>  
              <td width="50%" bgcolor="#FFEBCD">  
                <fmt:timeZone value="${zone}">  
                  <fmt:formatDate value="${str}" timeZone="${zn}"  
                  type="both"/>  
                </fmt:timeZone>  
              </td>  
            </tr>  
          </c:forEach>  
        </table>  
      </body>  
    </html>  

JSTL Formatting <fmt:formatNumber> Tag

The <fmt:formatNumber> tag is used to format the numerical value using the specific format or precision. It is used to format percentages, currencies, and numbers according to the customized formatting pattern.

The syntax used for including the <fmt:formatNumber> tag is:

    <fmt:formatNumber attributes> body content </fmt:formatNumber>  

Let's see the simple example to understand the formatting <fmt:formatNumber> tag:

    <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>  
    <%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt"%>  
      
    <html>  
    <head>  
    <title>fmt:formatNumber Tag</title>  
    </head>  
    <body>  
      
    <h3>Formatting of Number:</h3>  
    <c:set var="Amount" value="9850.14115" />  
    <p> Formatted Number-1:  
    <fmt:formatNumber value="${Amount}" type="currency" /></p>  
    <p>Formatted Number-2:  
    <fmt:formatNumber type="number" groupingUsed="true" value="${Amount}" /></p>  
    <p>Formatted Number-3:  
    <fmt:formatNumber type="number" maxIntegerDigits="3" value="${Amount}" /></p>  
    <p>Formatted Number-4:  
    <fmt:formatNumber type="number" maxFractionDigits="6" value="${Amount}" /></p>  
    <p>Formatted Number-5:  
    <fmt:formatNumber type="percent" maxIntegerDigits="4" value="${Amount}" /></p>  
    <p>Formatted Number-6:  
    <fmt:formatNumber type="number" pattern="###.###$" value="${Amount}" /></p>  
    </body>  
    </html>  

Output:

    Formatting of Number:  
    Formatted Number-1: $9,850.14  
    Formatted Number-2: 9,850.141  
    Formatted Number-3: 850.141  
    Formatted Number-4: 9,850.14115  
    Formatted Number-5: 5,014%  
    Formatted Number-6: 9850.141$  

JSTL Formatting <fmt:parseDate> Tag

The <fmt:parseDate> tag parses the string representation of a time and date. It is used to format the time and date according to a customized formatting pattern.

The syntax used for including the <fmt:parseDate> tag is:

    <fmt:parseDate attributes/>  

Let's see the simple example to understand the formatting <fmt:parseDate> tag:

    <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>  
    <%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>  
      
    <html>  
    <head>  
      <title>fmt:parseDate Tag</title>  
    </head>  
    <body>  
    <h3>Parsed Date:</h3>  
    <c:set var="date" value="12-08-2016" />  
      
    <fmt:parseDate value="${date}" var="parsedDate"  pattern="dd-MM-yyyy" />  
    <p><c:out value="${parsedDate}" /></p>  
      
    </body>  
    </html>  

Output:

Parsed Date:

Fri Aug 12 00:00:00 IST 2016

JSTL Formatting <fmt:bundle> Tag

The <fmt:bundle> tag loads the resource bundle which is used by its tag body. This tag will make the specified bundle available for all <fmt:message> tags that occurs between the boundary of <fmt:bundle> and </fmt:bundle> tags.

It is used to create the ResourceBundle objects which will be used by their tag body.

The syntax used for including the <fmt:bundle> tag is:

    <fmt:bundle basename="Resource Bundle Name" prefix="msg"> body content </fmt:bundle>  

Let's see the simple example to understand the formatting <fmt:bundle> tag:

Let us define the default resource bundle Simple.java as follows:

    package com.javatpoint;  
    import java.util.ListResourceBundle;  
    public class Simple extends ListResourceBundle {  
        public Object[][] getContents() {  
            return contents;  
        }  
        static final Object[][] contents = { { "colour.Violet", "Violet" },  
                { "colour.Indigo", "Indigo" }, { "colour.Blue", "Blue" }, };  
    }  

Now, compile the above class as Simple.class and make it available in CLASSPATH of your Web application folder.

Now you can use the below JSTL tags to display the three colors as follows:

    <%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>  
    <html>  
    <head>  
    <title>fmt:bundle Tag</title>  
    </head>  
    <body>  
      
    <fmt:bundle basename="com.javatpoint.Simple" prefix="colour.">  
       <fmt:message key="Violet"/><br/>  
       <fmt:message key="Indigo"/><br/>  
      <fmt:message key="Blue"/><br/>  
      
    </fmt:bundle>  
      
    </body>  
    </html>  

Output:

    Violet  
    Indigo  
    Blue  

JSTL Formatting <fmt:setBundle> Tag

The <fmt:setBundle> tag is used to load the resource bundle and store their value in the bundle configuration variable or the name scope variable.

It is used for creating the ResourceBundle object which will be used by tag body.

The syntax used for including the <fmt:setBundle> tag is:

    <fmt:setBundle basename="ResourceBundle Name" var="value"/>  

Let's see the simple example to understand the formatting <fmt:setBundle> tag:

Let us define the default resource bundle Main.java as follows:

    package com.javatpoint;  
    import java.util.ListResourceBundle;  
    public class Main extends ListResourceBundle {  
        public Object[][] getContents() {  
            return contents;  
        }  
    static final Object[][] contents = { { "vegetable.Potato", "Potato" },  
                { "vegetable.Tomato", "Tomato" }, { "vegetable.Carrot", "Carrot" }, };  
    }  

Now, compile the above class as Main.class and make it available in CLASSPATH of your Web application folder.

Now you can use the below JSTL tags to display the three vegetables as follows:

    <%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>  
    <html>  
    <head>  
    <title>fmt:setBundle Tag</title>  
    </head>  
    <body>  
    <fmt:setBundle basename="com.javatpoint.Main" var="lang"/>  
    <fmt:message key="vegetable.Potato" bundle="${lang}"/><br/>  
       <fmt:message key="vegetable.Tomato" bundle="${lang}"/><br/>  
      <fmt:message key="vegetable.Carrot" bundle="${lang}"/><br/>  
    </body>  
    </html>  

Output:

    Potato  
    Tomato  
    Carrot  

JSTL Core <fmt:message> Tag

The <fmt:message> tag is used for displaying an internationalized message. It maps the key of localized message to return the value using a resource bundle specified in the bundle attribute.

The syntax used for including the <fmt:message> tag is:

    <fmt:message attributes> body content </fmt:message>  

Let's see the simple example to understand the formatting <fmt:message> tag:

Let us define the default resource bundle Message.java as follows:

    package com.javatpoint;  
    import java.util.ListResourceBundle;  
    public class Message extends ListResourceBundle {  
        public Object[][] getContents() {  
            return contents;  
        }  
        static final Object[][] contents = { { "vegetable.Potato", "Potato" },  
                { "vegetable.Tomato", "Tomato" }, { "vegetable.Carrot", "Carrot" }, };  
    }  

Now, compile the above class as Message.class and make it available in CLASSPATH of your Web application folder.

Now you can use the below JSTL tags to display the three vegetables as follows:

    <%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>  
    <html>  
    <head>  
    <title>fmt:message Tag</title>  
    </head>  
    <body>  
    <fmt:setBundle basename="com.javatpoint.Message" var="lang"/>  
    <fmt:message key="vegetable.Potato" bundle="${lang}"/><br/>  
       <fmt:message key="vegetable.Tomato" bundle="${lang}"/><br/>  
      <fmt:message key="vegetable.Carrot" bundle="${lang}"/><br/>  
    </body>  
    </html>  

Output:

    Potato  
    Tomato  
    Carrot  

JSTL Formatting <fmt:formatDate> Tag

The <fmt:formatDate> tag is used for different formats of date and time using the supplied pattern and styles. It is used to format the time and date according to the customized formatting pattern.

The syntax used for including the <fmt:formatDate> tag is:

    <fmt:formatDate attributes/>  

Let's see the simple example to understand the formatting <fmt:formatDate> tag:

    <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>  
    <%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt"%>  
    <html>  
    <head>  
    <title>fmt:formatDate</title>  
    </head>  
    <body>  
    <h2>Different Formats of the Date</h2>  
    <c:set var="Date" value="<%=new java.util.Date()%>" />  
    <p>  
    Formatted Time :  
    <fmt:formatDate type="time" value="${Date}" />  
    </p>  
    <p>  
    Formatted Date :  
    <fmt:formatDate type="date" value="${Date}" />  
    </p>  
    <p>  
    Formatted Date and Time :  
    <fmt:formatDate type="both" value="${Date}" />  
    </p>  
    <p>  
    Formatted Date and Time in short style :  
    <fmt:formatDate type="both" dateStyle="short" timeStyle="short"  
    value="${Date}" />  
    </p>  
    <p>  
    Formatted Date and Time in medium style :  
    <fmt:formatDate type="both" dateStyle="medium" timeStyle="medium"  
    value="${Date}" />  
    </p>  
    <p>  
    Formatted Date and Time in long style :  
    <fmt:formatDate type="both" dateStyle="long" timeStyle="long"  
    value="${Date}" />  
    </p>  
      
    </body>  
    </html>  

Output:

    Different Formats of the Date  
    Formatted Time : 4:20:50 PM  
    Formatted Date : Aug 13, 2016  
    Formatted Date and Time : Aug 13, 2016 4:20:50 PM  
    Formatted Date and Time in short style : 8/13/16 4:20 PM  
    Formatted Date and Time in medium style : Aug 13, 2016 4:20:50 PM  
    Formatted Date and Time in long style : August 13, 2016 4:20:50 PM IST  

