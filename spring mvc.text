*********************************BASIC APP**********************************************************

web.xml

<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	id="WebApp_ID" version="3.1">

	<display-name>spring-mvc-demo</display-name>

	<!-- Spring MVC Configs -->

	<!-- Step 1: Configure Spring MVC Dispatcher Servlet -->
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring-mvc-demo-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- Step 2: Set up URL mapping for Spring MVC Dispatcher Servlet -->
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
</web-app>

spring-servlet.xml

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans.xsd
    	http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context.xsd
    	http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- Step 3: Add support for component scanning -->
	<context:component-scan base-package="beans" />

	<!-- Step 4: Add support for conversion, formatting and validation support -->
	<mvc:annotation-driven/>

	<!-- Step 5: Define Spring MVC view resolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>

</beans>



homecontroller.java

package beans;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
public class HomeController {

	@RequestMapping("/")
	public String index()
	{
		return "home";
	}
}


viewpage.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
</head>
<body>
	<h1>heloooooo</h1>
</body>
</html>

********************************Reading Form Data******************************************************
FromController.java

package beans;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
public class FormController {
	@RequestMapping("ShowForm")
	public String showFrom() 
	{
		return "ShowForm";
	}
	@RequestMapping("ProcessForm")
	public String processForm()
	{
		return "ProcessForm";
	}
}

ShowForm.java

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
</head>
<body>
	<form action="ProcessForm" method="get">
		Enter Name:
		<input type="text" name="name"/>
		<br/>
		<input type="submit"/>
	</form>
</body>
</html>

ProcessForm.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
</head>
<body>
<h1>welcome ${param.name}</h1>
</body>
</html>            

***********************Adding Form Data into Model ********************************************************

FormController.java

package beans;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
public class FormController {
	@RequestMapping("ShowForm")
	public String showFrom() 
	{
		return "ShowForm";
	}
	@RequestMapping("ProcessForm")
	public String processForm(HttpServletRequest request,Model model)
	{
		String thename=request.getParameter("name");
		thename=thename.toUpperCase();
		model.addAttribute("msg",thename);
		return "ProcessForm";
	}
}

processform.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
</head>
<body>
<h1>welcome ${msg}</h1>
</body>
</html>            

***********************RequestParam anno demo**********************************

Formcontroller.java

package beans;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
public class FormController {
	@RequestMapping("ShowForm")
	public String showFrom() 
	{
		return "ShowForm";
	}
	@RequestMapping("ProcessForm")
	public String processForm(@RequestParam("name") String thename,Model model)
	{
		thename=thename.toUpperCase();
		model.addAttribute("msg",thename);
		return "ProcessForm";
	}
}


***********************Controller RequestMapping demo******************************

package beans;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
@RequestMapping("userform")    //address will be userform/ShowForm or userform/ProcessForm
public class FormController {
	@RequestMapping("ShowForm")
	public String showFrom() 
	{
		return "ShowForm";
	}
	@RequestMapping("ProcessForm")
	public String processForm(@RequestParam("name") String thename,Model model)
	{
		thename=thename.toUpperCase();
		model.addAttribute("msg",thename);
		return "ProcessForm";
	}

*************************************************************************************************************
*******************Spring Form Tags*************************************************************************
**********************************************************************************************************

*******************Text Fields tags*********************************************

student.java

package beans;

public class Student {
	String fname;
	String lname;
	public Student() {
		super();
	}
	public String getFname() {
		return fname;
	}
	public void setFname(String fname) {
		this.fname = fname;
	}
	public String getLname() {
		return lname;
	}
	public void setLname(String lname) {
		this.lname = lname;
	}
	
}


studentcontroller.java

package beans;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
@RequestMapping("Student")
public class StudentController {
	@RequestMapping("ShowForm")
	public String showForm(Model model)
	{
		model.addAttribute("student",new Student());
		return "studentform";
	}
	@RequestMapping("ProcessForm")
	public String processForm(@ModelAttribute("student") Student student)
	{
		return "studentconform";
	}
}

studentfrom.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
</head>
<body>
	<form:form action="ProcessForm" modelAttribute="student">
	Firstname:<form:input path="fname"/>
	<br/>
	<br/>
	Lastname:<form:input path="lname"/>
	<br/>
	<input type="submit"/>
	</form:form>
</body>
</html>

studentconform.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
</head>
<body>
	<h1>Hello</h1>
	Firstname: ${student.fname}
	Lastname: ${student.lname}
</body>
</html>

***************Drop Down Hard Coded***********************************************
studentform.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
</head>
<body>
	<form:form action="ProcessForm" modelAttribute="student">
	Firstname:<form:input path="fname"/>
	<br/>
	<br/>
	Lastname:<form:input path="lname"/>
	<br/>
	<br/>
	Country:
	<form:select path="country">
		<form:option value="BRA" label="Brazil"></form:option>
		<form:option value="FR" label="France"></form:option>
		<form:option value="US" label="United states of amirica"></form:option>
		<form:option value="IN" label="India"></form:option>
	</form:select>
	<br/>
	<input type="submit"/>
	</form:form>
</body>
</html>

****************Drop Down From Java Code*******************************************8

student.java

package beans;

import java.util.LinkedHashMap;

public class Student {
	String fname;
	String lname;
	String country;
	LinkedHashMap<String,String> countryoptions;
	public Student() {
		super();
		countryoptions = new LinkedHashMap();
		countryoptions.put("BR", "Brazil");
		countryoptions.put("FR", "France");
		countryoptions.put("IN", "India");
		countryoptions.put("US", "USA");
	}
	public String getFname() {
		return fname;
	}
	public void setFname(String fname) {
		this.fname = fname;
	}
	public String getLname() {
		return lname;
	}
	public void setLname(String lname) {
		this.lname = lname;
	}
	public String getCountry() {
		return country;
	}
	public void setCountry(String country) {
		this.country = country;
	}
	public LinkedHashMap<String, String> getCountryoptions() {
		return countryoptions;
	}
	
	
}

showform.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
</head>
<body>
	<form:form action="ProcessForm" modelAttribute="student">
	Firstname:<form:input path="fname"/>
	<br/>
	<br/>
	Lastname:<form:input path="lname"/>
	<br/>
	<br/>
	Country:
	<form:select path="country">
		<form:options items="${student.countryoptions}"/>
	</form:select>
	<br/>
	<input type="submit"/>
	</form:form>
</body>
</html>


**************************Check Box and Radio buttons**************************************

student.java

package beans;

import java.util.LinkedHashMap;
import java.util.List;

public class Student {
	String fname;
	String lname;
	String country;
	LinkedHashMap<String,String> countryoptions;
	String lang;
	List<String> os;
	public Student() {
		super();
		countryoptions = new LinkedHashMap();
		countryoptions.put("BR", "Brazil");
		countryoptions.put("FR", "France");
		countryoptions.put("IN", "India");
		countryoptions.put("US", "USA");
	}
	public String getFname() {
		return fname;
	}
	public void setFname(String fname) {
		this.fname = fname;
	}
	public String getLname() {
		return lname;
	}
	public void setLname(String lname) {
		this.lname = lname;
	}
	public String getCountry() {
		return country;
	}
	public void setCountry(String country) {
		this.country = country;
	}
	public LinkedHashMap<String, String> getCountryoptions() {
		return countryoptions;
	}
	public String getLang() {
		return lang;
	}
	public void setLang(String lang) {
		this.lang = lang;
	}
	public List<String> getOs() {
		return os;
	}
	public void setOs(List<String> os) {
		this.os = os;
	}
	
	
}


studentfrom.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
</head>
<body>
	<form:form action="ProcessForm" modelAttribute="student">
	Firstname:<form:input path="fname"/>
	<br/>
	<br/>
	Lastname:<form:input path="lname"/>
	<br/>
	<br/>
	Country:
	<form:select path="country">
		<form:options items="${student.countryoptions}"/>
	</form:select>
	<br/>
	programing lng:
	<br/>
	Java:<form:radiobutton path="lang" value="java"/>
	<br/>
	php:<form:radiobutton path="lang" value="php"/>
	<br/>
	python:<form:radiobutton path="lang" value="python"/>
	<br/>
	OS:
	<br/>
	Linux<form:checkbox path="os" value="linux"/>
	<br/>
	Mac Os<form:checkbox path="os" value="mac"/>
	<br/>
	win<form:checkbox path="os" value="win"/>
	<br/>
	<input type="submit"/>
	</form:form>
</body>
</html>

studentconform.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
</head>
<body>
	<h1>Hello</h1>
	Firstname: ${student.fname}
	Lastname: ${student.lname}
	Country:  ${student.country}
	programing lang: ${student.lang}
	Operating System:
	<ul>
		<c:forEach var="temp" items="${student.os}">
		<li>${temp}</li>
		</c:forEach>
	</ul>
</body>
</html>

*************************************************************************************************************
*******************Spring validations*************************************************************************
**********************************************************************************************************

*****************Notnull and Size*********************

Customer.java

package beans;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

public class Customer {
	String fname;
	@NotNull(message="is required")
	@Size(min=1,message="is required")
	String lname;
	public String getFname() {
		return fname;
	}
	public void setFname(String fname) {
		this.fname = fname;
	}
	public String getLname() {
		return lname;
	}
	public void setLname(String lname) {
		this.lname = lname;
	}
	
}


Customercontroller.java

package beans;

import javax.validation.Valid;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
@RequestMapping("Customer")
public class CustomerController {
	@RequestMapping("ShowForm")
	public String showForm(Model model)
	{
		model.addAttribute("customer",new Customer());
		return "customerform";
	}
	@RequestMapping("ProcessForm")
	public String processForm(@Valid @ModelAttribute("customer") Customer customer,
								BindingResult br)
	{
		if(br.hasErrors())
			return "customerform";
		else
			return "customerconform";
	}
}


customerform.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
    <%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
<style type="text/css">
	.errors
	{
		color:red;
	}
</style>
</head>
<body>
	<form:form action="ProcessForm"  modelAttribute="customer">
		Firstname:<form:input path="fname"/>
		<br/>
		<br/>
		Lastname:<form:input path="lname"/>
		<form:errors path="lname" cssClass="errors"/>
		<br/>
		<br/>
		<input type="submit"/>
	</form:form>
</body>
</html>

customerconform.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
</head>
<body>
	Customer INFO:
	<br/>
	Firstname: ${customer.fname }
	<br/>
	Lastname: ${customer.lname }
	<br/>
</body>
</html>

*****************************Problem with White Space(@InitBinder anno)****************************************************

customercontroller.java

package beans;

import javax.validation.Valid;

import org.springframework.beans.propertyeditors.StringTrimmerEditor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
@RequestMapping("Customer")
public class CustomerController {
	
	@InitBinder
	public void initbinder(WebDataBinder databinder)
	{
		StringTrimmerEditor ste=new StringTrimmerEditor(true);
		databinder.registerCustomEditor(String.class,ste);
	}
	
	@RequestMapping("ShowForm")
	public String showForm(Model model)
	{
		model.addAttribute("customer",new Customer());
		return "customerform";
	}
	@RequestMapping("ProcessForm")
	public String processForm(@Valid @ModelAttribute("customer") Customer customer,
								BindingResult br)
	{
		System.out.println("Lname: "+customer.getLname());
		if(br.hasErrors())
			return "customerform";
		else
			return "customerconform";
	}
}


********************************@Min @Max anno****************************************************

customer.java

package beans;

import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

public class Customer {
	String fname;
	@NotNull(message="is required")
	@Size(min=1,message="is required")
	String lname;
	@Min(value=0)
	@Max(value=10)
	int freepasses;
	public String getFname() {
		return fname;
	}
	public void setFname(String fname) {
		this.fname = fname;
	}
	public String getLname() {
		return lname;
	}
	public void setLname(String lname) {
		this.lname = lname;
	}
	public int getFreepasses() {
		return freepasses;
	}
	public void setFreepasses(int freepasses) {
		this.freepasses = freepasses;
	}
	
}

*********************RE or pattern ***********************************

customer.java

package beans;

import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

public class Customer {
	String fname;
	@NotNull(message="is required")
	@Size(min=1,message="is required")
	String lname;
	@Min(value=0)
	@Max(value=10)
	int freepasses;
	@Pattern(regexp="^[a-zA-Z0-9] {5}",message="only 5 chars/digits")
	String postalcode;
	
	public String getFname() {
		return fname;
	}
	public void setFname(String fname) {
		this.fname = fname;
	}
	public String getLname() {
		return lname;
	}
	public void setLname(String lname) {
		this.lname = lname;
	}
	public int getFreepasses() {
		return freepasses;
	}
	public void setFreepasses(int freepasses) {
		this.freepasses = freepasses;
	}
	public String getPostalcode() {
		return postalcode;
	}
	public void setPostalcode(String postalcode) {
		this.postalcode = postalcode;
	}
	
}



*****NOTE: for @NotNull wont work for int ...to make work we have to change int to Integer


